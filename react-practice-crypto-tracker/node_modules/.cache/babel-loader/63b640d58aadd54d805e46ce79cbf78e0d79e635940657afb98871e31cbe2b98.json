{"ast":null,"code":"// import { useParams } from \"react-router-dom\";\nimport{useQuery}from\"react-query\";import{fetchCoinHistory}from\"../api\";import ApexChart from\"react-apexcharts\";import{jsx as _jsx}from\"react/jsx-runtime\";function Chart(_ref){var _map;let{coinId}=_ref;// const params = useParams();\nconst{isLoading,data}=useQuery([\"ohlcv\",coinId],()=>fetchCoinHistory(coinId),{refetchInterval:10000});return/*#__PURE__*/_jsx(\"div\",{children:isLoading?\"Loading chart...\":data.error?data.error:/*#__PURE__*/_jsx(ApexChart,{type:\"line\",options:{theme:{mode:\"dark\"},chart:{width:500,height:300,toolbar:{show:false},background:\"transparent\"},grid:{show:false},stroke:{curve:\"smooth\",width:5},yaxis:{show:false},xaxis:{labels:{show:false},axisBorder:{show:false},axisTicks:{show:false},type:\"datetime\",categories:data===null||data===void 0?void 0:data.map(price=>{// const date = new Date(parseInt(price.time_close) * 1000)\n// \t.toISOString()\n// \t.split(\"T\")[0];\n//\n// return date;\n// 2024-04-13\nconst date=new Date(parseInt(price.time_close)*1000);const year=date.getFullYear();const monthIndex=date.getMonth();const day=date.getDate();const months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];const formattedDate=\"\".concat(year,\"/\").concat(months[monthIndex],\"/\").concat(day<10?\"0\"+day:day);return formattedDate;})},fill:{type:\"gradient\",gradient:{// gradientToColors: [\"blue\"],\ngradientToColors:[\"#0be881\"],stops:[0,100]}},// colors: [\"red\"],\ncolors:[\"#0fbcf9\"],tooltip:{y:{formatter:value=>\"$\".concat(value.toFixed(2))}}},series:[{name:\"Price\",data:(_map=data===null||data===void 0?void 0:data.map(price=>price.close))!==null&&_map!==void 0?_map:[]}]})// <ApexChart\n// \ttype=\"line\"\n// \toptions={{\n// \t\ttheme: { mode: \"dark\" },\n// \t\tchart: { width: 500, height: 500 },\n// \t}}\n// \tseries={[\n// \t\t{\n// \t\t\tname: \"hello\",\n// \t\t\tdata: [1, 2, 3, 4, 5, 6],\n// \t\t},\n// \t\t{\n// \t\t\tname: \"sales\",\n// \t\t\tdata: [15, 18, 15, 78, 56],\n// \t\t},\n// \t]}\n// />\n});}export default Chart;","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","jsx","_jsx","Chart","_ref","_map","coinId","isLoading","data","refetchInterval","children","error","type","options","theme","mode","chart","width","height","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","labels","axisBorder","axisTicks","categories","map","price","date","Date","parseInt","time_close","year","getFullYear","monthIndex","getMonth","day","getDate","months","formattedDate","concat","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","series","name","close"],"sources":["E:/Projects/digital-nomad-life/react-practice-crypto-tracker/src/routes/Chart.tsx"],"sourcesContent":["// import { useParams } from \"react-router-dom\";\r\n\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistoricalData {\r\n\ttime_open: string;\r\n\ttime_close: string;\r\n\topen: number;\r\n\thigh: number;\r\n\tlow: number;\r\n\tclose: number;\r\n\tvolume: number;\r\n\tmarket_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n\tcoinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n\t// const params = useParams();\r\n\tconst { isLoading, data } = useQuery<IHistoricalData[] | { error: string }>(\r\n\t\t[\"ohlcv\", coinId],\r\n\t\t() => fetchCoinHistory(coinId),\r\n\t\t{\r\n\t\t\trefetchInterval: 10000,\r\n\t\t}\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t\"Loading chart...\"\r\n\t\t\t) : (data as { error: string }).error ? (\r\n\t\t\t\t(data as { error: string }).error\r\n\t\t\t) : (\r\n\t\t\t\t<ApexChart\r\n\t\t\t\t\ttype=\"line\"\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\ttheme: { mode: \"dark\" },\r\n\t\t\t\t\t\tchart: {\r\n\t\t\t\t\t\t\twidth: 500,\r\n\t\t\t\t\t\t\theight: 300,\r\n\t\t\t\t\t\t\ttoolbar: { show: false },\r\n\t\t\t\t\t\t\tbackground: \"transparent\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgrid: { show: false },\r\n\t\t\t\t\t\tstroke: {\r\n\t\t\t\t\t\t\tcurve: \"smooth\",\r\n\t\t\t\t\t\t\twidth: 5,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tyaxis: { show: false },\r\n\t\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\t\tlabels: { show: false },\r\n\t\t\t\t\t\t\taxisBorder: { show: false },\r\n\t\t\t\t\t\t\taxisTicks: {\r\n\t\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttype: \"datetime\",\r\n\t\t\t\t\t\t\tcategories: (data as IHistoricalData[])?.map((price) => {\r\n\t\t\t\t\t\t\t\t// const date = new Date(parseInt(price.time_close) * 1000)\r\n\t\t\t\t\t\t\t\t// \t.toISOString()\r\n\t\t\t\t\t\t\t\t// \t.split(\"T\")[0];\r\n\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t// return date;\r\n\t\t\t\t\t\t\t\t// 2024-04-13\r\n\r\n\t\t\t\t\t\t\t\tconst date = new Date(parseInt(price.time_close) * 1000);\r\n\t\t\t\t\t\t\t\tconst year = date.getFullYear();\r\n\t\t\t\t\t\t\t\tconst monthIndex = date.getMonth();\r\n\t\t\t\t\t\t\t\tconst day = date.getDate();\r\n\r\n\t\t\t\t\t\t\t\tconst months = [\r\n\t\t\t\t\t\t\t\t\t\"Jan\",\r\n\t\t\t\t\t\t\t\t\t\"Feb\",\r\n\t\t\t\t\t\t\t\t\t\"Mar\",\r\n\t\t\t\t\t\t\t\t\t\"Apr\",\r\n\t\t\t\t\t\t\t\t\t\"May\",\r\n\t\t\t\t\t\t\t\t\t\"Jun\",\r\n\t\t\t\t\t\t\t\t\t\"Jul\",\r\n\t\t\t\t\t\t\t\t\t\"Aug\",\r\n\t\t\t\t\t\t\t\t\t\"Sep\",\r\n\t\t\t\t\t\t\t\t\t\"Oct\",\r\n\t\t\t\t\t\t\t\t\t\"Nov\",\r\n\t\t\t\t\t\t\t\t\t\"Dec\",\r\n\t\t\t\t\t\t\t\t];\r\n\r\n\t\t\t\t\t\t\t\tconst formattedDate = `${year}/${months[monthIndex]}/${\r\n\t\t\t\t\t\t\t\t\tday < 10 ? \"0\" + day : day\r\n\t\t\t\t\t\t\t\t}`;\r\n\r\n\t\t\t\t\t\t\t\treturn formattedDate;\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tfill: {\r\n\t\t\t\t\t\t\ttype: \"gradient\",\r\n\t\t\t\t\t\t\tgradient: {\r\n\t\t\t\t\t\t\t\t// gradientToColors: [\"blue\"],\r\n\t\t\t\t\t\t\t\tgradientToColors: [\"#0be881\"],\r\n\t\t\t\t\t\t\t\tstops: [0, 100],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t// colors: [\"red\"],\r\n\t\t\t\t\t\tcolors: [\"#0fbcf9\"],\r\n\t\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\t\ty: {\r\n\t\t\t\t\t\t\t\tformatter: (value) => `$${value.toFixed(2)}`,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tseries={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"Price\",\r\n\t\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t\t(data as IHistoricalData[])?.map((price) => price.close) ?? [],\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t\t// <ApexChart\r\n\t\t\t// \ttype=\"line\"\r\n\t\t\t// \toptions={{\r\n\t\t\t// \t\ttheme: { mode: \"dark\" },\r\n\t\t\t// \t\tchart: { width: 500, height: 500 },\r\n\t\t\t// \t}}\r\n\t\t\t// \tseries={[\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tname: \"hello\",\r\n\t\t\t// \t\t\tdata: [1, 2, 3, 4, 5, 6],\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t{\r\n\t\t\t// \t\t\tname: \"sales\",\r\n\t\t\t// \t\t\tdata: [15, 18, 15, 78, 56],\r\n\t\t\t// \t\t},\r\n\t\t\t// \t]}\r\n\t\t\t// />\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Chart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}